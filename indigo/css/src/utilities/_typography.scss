@mixin sans() {
  font-family: "Inter UI", -apple-system, BlinkMacSystemFont, Roboto, Helvetica,
    Arial, sans-serif, "Apple Color Emoji";
}

@mixin mono() {
  font-family: "Source Code Pro", "Roboto mono", "Courier New", monospace;
}

* {
  @include sans();
  color: $black;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: $fw-bold;
  margin: 0;
  padding: 0;
}

a {
  color: $black;
  text-decoration: none;
}

h1,
.f1 {
  font-size: $fs1;
  line-height: $lh-short;
  font-weight: $fw-regular;
}

h2,
.f2 {
  font-size: $fs2;
  line-height: $lh-regular;
  font-weight: $fw-regular;
}

h3,
.f3 {
  font-size: $fs3;
  line-height: $lh-regular;
  font-weight: $fw-regular;
}

h4,
.f4 {
  font-size: $fs4;
  line-height: $lh-short;
  font-weight: $fw-regular;
}

h5,
p,
.f5 {
  font-size: $fs5;
  line-height: $lh-regular;
  font-weight: $fw-regular;
}

caption,
.f6 {
  font-size: $fs6;
  line-height: $lh-short;
  font-weight: $fw-regular;
}

@each $bp in $breakpoints {
  $suffix: get($bp, "suffix");
  $rule: get($bp, "rule");
  @media #{$rule} {
    .f1-#{$suffix} {
      font-size: $fs1;
      line-height: $lh-short;
      font-weight: $fw-regular;
    }

    .f2-#{$suffix} {
      font-size: $fs2;
      line-height: $lh-regular;
      font-weight: $fw-regular;
    }

    .f3-#{$suffix} {
      font-size: $fs3;
      line-height: $lh-regular;
      font-weight: $fw-regular;
    }

    .f4-#{$suffix} {
      font-size: $fs4;
      line-height: $lh-short;
      font-weight: $fw-regular;
    }

    .f5-#{$suffix} {
      font-size: $fs5;
      line-height: $lh-regular;
      font-weight: $fw-regular;
    }

    .f6-#{$suffix} {
      font-size: $fs6;
      line-height: $lh-short;
      font-weight: $fw-regular;
    }
  }
}

// Line height
.lh-short {
  line-height: $lh-short;
}

.lh-regular {
  line-height: $lh-regular;
}

.lh-tall {
  line-height: $lh-tall;
}

@each $bp in $breakpoints {
  $suffix: get($bp, "suffix");
  $rule: get($bp, "rule");
  @media #{$rule} {
    .lh-short-#{$suffix} {
      line-height: $lh-short;
    }

    .lh-regular-#{$suffix} {
      line-height: $lh-regular;
    }

    .lh-tall-#{$suffix} {
      line-height: $lh-tall;
    }
  }
}

// Font weight
.fw-thin {
  font-weight: $fw-thin;
}

.fw-regular {
  font-weight: $fw-regular;
}

.fw-bold {
  font-weight: $fw-bold;
}

@each $bp in $breakpoints {
  $suffix: get($bp, "suffix");
  $rule: get($bp, "rule");
  @media #{$rule} {
    .fw-thin-#{$suffix} {
      font-weight: $fw-thin;
    }

    .fw-regular-#{$suffix} {
      font-weight: $fw-regular;
    }

    .fw-bold-#{$suffix} {
      font-weight: $fw-bold;
    }
  }
}

// Markdown
.md {
  h1 {
    font-size: $fs1;
    line-height: $lh-short;
    font-weight: $fw-bold;
    margin: $s8 0;
  }
  h2 {
    font-size: $fs2;
    line-height: $lh-regular;
    font-weight: $fw-bold;
    margin: $s7 0;
  }
  h3 {
    font-size: $fs3;
    line-height: $lh-regular;
    font-weight: $fw-bold;
    margin: $s6 0;
  }
  h4 {
    font-size: $fs4;
    line-height: $lh-short;
    font-weight: $fw-bold;
    margin: $s5 0;
  }
  h5 {
    font-size: $fs5;
    line-height: $lh-regular;
    font-weight: $fw-bold;
    margin: $s7 0;
  }
  p {
    font-size: $fs5;
    line-height: $lh-regular;
    font-weight: $fw-regular;
    margin: $s7 0;
  }
  caption {
    font-size: $fs6;
    line-height: $lh-short;
    font-weight: $fw-regular;
    margin: $s4 0;
  }
  code {
    font-family: Source Code Pro;
    background-color: $gray2;
    padding: 4px;
    border-radius: 1px;
  }
  a {
    text-decoration: underline;
  }
}

.truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.indent {
  text-indent: 2em;
  margin-top: 0;
  margin-bottom: 0;
}

@each $bp in $breakpoints {
  $suffix: get($bp, "suffix");
  $rule: get($bp, "rule");
  @media #{$rule} {
    .truncate-#{$suffix} {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    .indent-#{$suffix} {
      text-indent: 2em;
      margin-top: 0;
      margin-bottom: 0;
    }
  }
}

// Measure
// “Anything from 45 to 75 characters is widely regarded as a satisfactory length
// of line for a single-column page… the 66-character line (counting both letters
// and spaces) is widely regarded as ideal. For multiple-column work, a better
// average is 40-50 characters.”

.measure-narrow {
  max-width: 20rem;
}
.measure {
  max-width: 30rem;
}
.measure-wide {
  max-width: 34rem;
}

@each $bp in $breakpoints {
  $suffix: get($bp, "suffix");
  $rule: get($bp, "rule");
  @media #{$rule} {
    .measure-narrow-#{$suffix} {
      max-width: 20rem;
    }
    .measure-#{$suffix} {
      max-width: 30rem;
    }
    .measure-wide-#{$suffix} {
      max-width: 34rem;
    }
  }
}

.sans {
  @include sans();
}

.mono {
  @include mono();
}

.italic,
.i {
  font-style: italic;
}

.fs-normal {
  font-style: normal;
}

.t-left {
  text-align: left;
}
.t-center {
  text-align: center;
}
.t-justified {
  text-align: justify;
}
.t-right {
  text-align: right;
}

@each $bp in $breakpoints {
  $suffix: get($bp, "suffix");
  $rule: get($bp, "rule");

  @media #{$rule} {
    .t-left-#{$suffix} {
      text-align: left;
    }
    .t-center-#{$suffix} {
      text-align: center;
    }
    .t-justified-#{$suffix} {
      text-align: justify;
    }
    .t-right-#{$suffix} {
      text-align: right;
    }
  }
}

.underline {
  text-decoration: underline;
}

.strikethrough {
  text-decoration: line-through;
}

.no-underline {
  text-decoration: none;
}

.ttc,
.capitalize {
  text-transform: capitalize;
}

.ttl,
.lowercase {
  text-transform: lowercase;
}

.ttu,
.uppercase {
  text-transform: uppercase;
}

.ttn {
  text-transform: none;
}

// Vertical Align
// .t-top {
//   vertical-align: top;
// }
// .t-middle {
//   vertical-align: middle;
// }
// .t-bottom {
//   vertical-align: bottom;
// }
// .t-baseline {
//   vertical-align: baseline;
// }
// .t-sub {
//   vertical-align: sub;
// }
// .t-super {
//   vertical-align: super;
// }
// .t-text-bottom {
//   vertical-align: text-bottom;
// }
// .t-text-top {
//   vertical-align: text-top;
// }
//
// @each $bp in $breakpoints {
//   $suffix: get($bp, "suffix");
//   $rule: get($bp, "rule");
//
//   @media #{$rule} {
//     .t-top-#{$suffix} {
//       vertical-align: top;
//     }
//     .t-middle-#{$suffix} {
//       vertical-align: middle;
//     }
//     .t-bottom-#{$suffix} {
//       vertical-align: bottom;
//     }
//     .t-baseline-#{$suffix} {
//       vertical-align: baseline;
//     }
//     .t-sub-#{$suffix} {
//       vertical-align: sub;
//     }
//     .t-super-#{$suffix} {
//       vertical-align: super;
//     }
//     .t-text-bottom-#{$suffix} {
//       vertical-align: text-bottom;
//     }
//     .t-text-top-#{$suffix} {
//       vertical-align: text-top;
//     }
//   }
// }

.ws-normal {
  white-space: normal;
}
.nowrap {
  white-space: nowrap;
}
.pre {
  white-space: pre;
}
.wrap {
  word-break: break-word;
}

@each $bp in $breakpoints {
  $suffix: get($bp, "suffix");
  $rule: get($bp, "rule");

  @media #{$rule} {
    .ws-normal-#{$suffix} {
      white-space: normal;
    }
    .nowrap-#{$suffix} {
      white-space: nowrap;
    }
    .pre-#{$suffix} {
      white-space: pre;
    }
    .wrap-#{$suffix} {
      word-break: break-word;
    }
  }
}
